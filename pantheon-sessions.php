<?php
/*
Plugin Name: Pantheon Sessions for WordPress
Version: 0.1-alpha
Description: Offload PHP sessions to your database for multi-server compatibility.
Author: Pantheon
Author URI: https://www.getpantheon.com/
Plugin URI: https://www.getpantheon.com/
Text Domain: pantheon-sessions
Domain Path: /languages
*/

class Pantheon_Sessions {

	private static $instance;

	public static function get_instance() {

		if ( ! isset( self::$instance ) ) {
			self::$instance = new Pantheon_Sessions;
			self::$instance->load();
		}

	}

	/**
	 * Load the plugin
	 */
	private function load() {

		$this->define_constants();
		$this->require_files();

		if ( PANTHEON_SESSIONS_ENABLED ) {
			$this->setup_database();
		}

	}

	/**
	 * Define our constants
	 */
	private function define_constants() {

		define( 'PANTHEON_SESSIONS_VERSION', '0.1-alpha' );

		if ( ! defined( 'PANTHEON_SESSIONS_ENABLED' ) ) {
			define( 'PANTHEON_SESSIONS_ENABLED', 1 );
		}

	}

	/**
	 * Load required files
	 */
	private function require_files() {

		if ( defined( 'WP_CLI' ) && WP_CLI ) {
			require_once dirname( __FILE__ ) . '/inc/class-cli-command.php';
		}

	}

	/**
	 * Set up the database
	 */
	private function setup_database() {
		global $wpdb, $table_prefix;

		$table_name = "{$table_prefix}pantheon_sessions";
		$wpdb->pantheon_sessions = $table_name;
		$wpdb->tables[] = $table_name;

		if ( get_option( 'pantheon_session_version' ) ) {
			return;
		}

		$create_statement = "CREATE TABLE IF NOT EXISTS `{$table_name}` (
			`user_id` bigint(20) unsigned NOT NULL COMMENT 'The user_id corresponding to a session, or 0 for anonymous user.',
			`session_id` varchar(128) NOT NULL DEFAULT '' COMMENT 'A session ID. The value is generated by plugin''s session handlers.',
			`secure_session_id` varchar(128) NOT NULL DEFAULT '' COMMENT 'Secure session ID. The value is generated by plugin''s session handlers.',
			`hostname` varchar(128) NOT NULL DEFAULT '' COMMENT 'The IP address that last used this session ID.',
			`timestamp` bigint(20) NOT NULL DEFAULT '0' COMMENT 'The Unix timestamp when this session last requested a page. Old records are purged by PHP automatically.',
			`session` blob COMMENT 'The serialized contents of \$_SESSION, an array of name/value pairs that persists across page requests by this session ID. Plugin loads \$_SESSION from here at the start of each request and saves it at the end.',
			KEY `session_id` (`session_id`),
			KEY `secure_session_id` (`secure_session_id`)
		)";
		$wpdb->query( $create_statement );
		update_option( 'pantheon_session_version', PANTHEON_SESSIONS_VERSION );

	}

}

/**
 * Release the kraken!
 */
function Pantheon_Sessions() {
	return Pantheon_Sessions::get_instance();
}
add_action( 'muplugins_loaded', 'Pantheon_Sessions' );